// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© biggungang

//@version=5
indicator("2MA",overlay=true)

//2MA
MA1Period = input.int(21, title='MA1 Period', minval=1, step=1, group = "MA")
MA1Type = input.string(title='MA1 Type', defval='HMA', options=['RMA', 'SMA', 'EMA', 'WMA', 'HMA', 'DEMA', 'TEMA', 'VWMA'], group = "MA")
MA1Source = input.source(title='MA1 Source', defval=close, group = "MA")
MA1Resolution = input.string(title='MA1 Resolution', defval='00 Current', options=['00 Current', '01 1m', '02 3m', '03 5m', '04 15m', '05 30m', '06 45m', '07 1h', '08 2h', '09 3h', '10 4h', '11 1D', '12 1W', '13 1M'], group = "MA")
MA2Period = input.int(36, title='MA2 Period', minval=1, step=1, group = "MA")
MA2Type = input.string(title='MA2 Type', defval='HMA', options=['RMA', 'SMA', 'EMA', 'WMA', 'HMA', 'DEMA', 'TEMA', 'VWMA'], group = "MA")
MA2Source = input.source(title='MA2 Source', defval=close, group = "MA")
MA2Resolution = input.string(title='MA2 Resolution', defval='00 Current', options=['00 Current', '01 1m', '02 3m', '03 5m', '04 15m', '05 30m', '06 45m', '07 1h', '08 2h', '09 3h', '10 4h', '11 1D', '12 1W', '13 1M'], group = "MA")
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ma(MAType, MASource, MAPeriod) =>
    if MAType == 'SMA'
        ta.sma(MASource, MAPeriod)
    else
        if MAType == 'EMA'
            ta.ema(MASource, MAPeriod)
        else
            if MAType == 'WMA'
                ta.wma(MASource, MAPeriod)
            else
                if MAType == 'RMA'
                    ta.rma(MASource, MAPeriod)
                else
                    if MAType == 'HMA'
                        ta.hma(MASource, MAPeriod)
                    else
                        if MAType == 'DEMA'
                            e = ta.ema(MASource, MAPeriod)
                            2 * e - ta.ema(e, MAPeriod)
                        else
                            if MAType == 'TEMA'
                                e = ta.ema(MASource, MAPeriod)
                                3 * (e - ta.ema(e, MAPeriod)) + ta.ema(ta.ema(e, MAPeriod), MAPeriod)
                            else
                                if MAType == 'VWMA'
                                    ta.vwma(MASource, MAPeriod)
res(Resolution) =>
    if Resolution == "00 Current"
        timeframe.period
    else
        if Resolution == "01 1m"
            "1"
        else
            if Resolution == "02 3m"
                "3"
            else
                if Resolution == "03 5m"
                    "5"
                else
                    if Resolution == "04 15m"
                        "15"
                    else
                        if Resolution == "05 30m"
                            "30"
                        else
                            if Resolution == "06 45m"
                                "45"
                            else
                                if Resolution == "07 1h"
                                    "60"
                                else
                                    if Resolution == "08 2h"
                                        "120"
                                    else
                                        if Resolution == "09 3h"
                                            "180"
                                        else
                                            if Resolution == "10 4h"
                                                "240"
                                            else
                                                if Resolution == "11 1D"
                                                    "1D"
                                                else
                                                    if Resolution == "12 1W"
                                                        "1W"
                                                    else
                                                        if Resolution == "13 1M"
                                                            "1M"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MA1 = request.security(syminfo.tickerid, res(MA1Resolution), ma(MA1Type, MA1Source, MA1Period))
MA2 = request.security(syminfo.tickerid, res(MA2Resolution), ma(MA2Type, MA2Source, MA2Period))
plot(MA1 , color=color.new(color.green, 0), linewidth=2, title='MA1')
plot(MA2 , color=color.new(color.purple, 0), linewidth=3, title='MA2')
